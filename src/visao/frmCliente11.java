package visao;

import util.Auxiliar;
import dao.ClienteDao;
import dao.ContatoClienteDao;
import dao.EnderecoDao;
import java.util.ArrayList;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import modelo.Cliente;
import modelo.ContatoCliente;
import modelo.Endereco;

public class frmCliente11 extends javax.swing.JFrame {

    private static frmCliente11 cliente;
    private ArrayList<String> genero = null;
    private String msg = "";
    private final String[] tblEnderecoColumns = {"Logradouro", "Número", "Complemento", "Bairro", "Cidade", "UF"};
    private ArrayList<Endereco> address;
    private int rowId;
    private ArrayList<Integer> codigoExclusao; // Guarda código dos Endereço para exclusão
    private String action; // Guarda a ação a ser executada
    private int codigoContato;
    private int codigoCliente;

    public frmCliente11() {
        initComponents();
        this.disabledFields();
    }

    public static frmCliente11 getInstancia() {
        if (frmCliente11.cliente == null) {
            frmCliente11.cliente = new frmCliente11();
        }

        return frmCliente11.cliente;
    }

    public void alterarCliente(int codCliente) {
        this.enabledFields();
        this.botaoEnabled(false, false, true, true, true);
        this.listGenero();

        ClienteDao dao = new ClienteDao();
        Cliente client = dao.consultClientPorCodigo(codCliente);

        this.codigoCliente = client.getCodigo();

        if (client.getTipo() == 1) {
            this.tabDados.setSelectedIndex(0);
            this.tabDados.setEnabledAt(1, false);

            this.txtCodigoFisica.setText(Integer.toString(client.getCodigo()));
            this.txtCodigoFisica.setEnabled(false);
            this.txtNome.setText(client.getNome());
            this.txtSobrenome.setText(client.getSobrenome());
            this.txtCPF.setText(client.getCpfCnpj());
            this.txtRg.setText(client.getRgIe());
            this.txtOrgExpedidor.setText(client.getOrgExpedidor());
            this.txtDataNasc.setText(Auxiliar.dateBr(client.getDataNasc()));
            this.cbxStatus.setSelected(client.getStatus());
            this.cmbGenerco.setSelectedIndex(client.getSexo());
        } else {
            this.tabDados.setSelectedIndex(1);
            this.tabDados.setEnabledAt(0, false);

            this.txtCodigoJuridica.setText(Integer.toString(client.getCodigo()));
            this.txtCodigoJuridica.setEnabled(false);
            this.txtRazao.setText(client.getNome());
            this.txtFantasia.setText(client.getSobrenome());
            this.txtCnpj.setText(client.getCpfCnpj());
            this.txtIE.setText(client.getRgIe());
            this.txtIE.setEnabled(!client.getRgIe().equals("Isento"));
            this.cbxStatusJur.setSelected(client.getStatus());
            cbxIsento.setSelected(client.getRgIe().equals("Isento"));
        }

        this.getClienteContato(codCliente);
        this.getEndereco(codCliente);

        this.action = "update";
    }

    public void addAddress(Endereco endereco) {
        this.address.add(endereco);
        this.preencheTable();
    }

    public void updateEndereco(Endereco endereco) {
        this.address.set(this.rowId, endereco);
        this.preencheTable();
    }

    public void delAddress() {
        // Guarda código do endereço para exclusão
        if (this.address.get(this.rowId).getCodigo() != 0) {
            this.codigoExclusao.add(this.address.get(this.rowId).getCodigo());
        }

        this.address.remove(this.rowId);

        DefaultTableModel model = (DefaultTableModel) this.tblEndereco.getModel();
        model.removeRow(this.rowId);
        this.tblEndereco.setModel(model);
        this.setWidthColumn();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        grTipo = new javax.swing.ButtonGroup();
        mnEndereco = new javax.swing.JPopupMenu();
        mniEditarAddress = new javax.swing.JMenuItem();
        mniRemoverAddress = new javax.swing.JMenuItem();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        btnNovo = new javax.swing.JButton();
        btnExcluir = new javax.swing.JButton();
        btnConsultar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        btnSair = new javax.swing.JButton();
        btnSalvar = new javax.swing.JButton();
        tabDados = new javax.swing.JTabbedPane();
        pessoaFisica = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        cbxStatus = new javax.swing.JCheckBox();
        jLabel3 = new javax.swing.JLabel();
        txtNome = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtSobrenome = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtRg = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtOrgExpedidor = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        txtDataNasc = new javax.swing.JFormattedTextField();
        txtCPF = new javax.swing.JFormattedTextField();
        jLabel13 = new javax.swing.JLabel();
        cmbGenerco = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        txtCodigoFisica = new javax.swing.JTextField();
        pessoaJuridica = new javax.swing.JPanel();
        jLabel23 = new javax.swing.JLabel();
        cbxStatusJur = new javax.swing.JCheckBox();
        jLabel24 = new javax.swing.JLabel();
        txtRazao = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        txtFantasia = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        txtCnpj = new javax.swing.JFormattedTextField();
        txtIE = new javax.swing.JTextField();
        cbxIsento = new javax.swing.JCheckBox();
        jLabel14 = new javax.swing.JLabel();
        txtCodigoJuridica = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblEndereco = new javax.swing.JTable();
        btnAddEndereco = new javax.swing.JButton();
        panelContato = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtTelefone = new javax.swing.JFormattedTextField();
        jLabel10 = new javax.swing.JLabel();
        txtCelular = new javax.swing.JFormattedTextField();
        jLabel27 = new javax.swing.JLabel();
        txtSite = new javax.swing.JTextField();

        mniEditarAddress.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/edit.png"))); // NOI18N
        mniEditarAddress.setText("Editar");
        mniEditarAddress.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniEditarAddressActionPerformed(evt);
            }
        });
        mnEndereco.add(mniEditarAddress);

        mniRemoverAddress.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/delete.png"))); // NOI18N
        mniRemoverAddress.setText("Remover");
        mniRemoverAddress.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniRemoverAddressActionPerformed(evt);
            }
        });
        mnEndereco.add(mniRemoverAddress);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Manutenção de Clientes");
        setResizable(false);

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setFont(new java.awt.Font("Calibri Light", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel1.setText("Manutenção de Cliente");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        btnNovo.setFont(new java.awt.Font("Calibri Light", 1, 12)); // NOI18N
        btnNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/user.png"))); // NOI18N
        btnNovo.setText("Novo");
        btnNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNovoActionPerformed(evt);
            }
        });

        btnExcluir.setFont(new java.awt.Font("Calibri Light", 1, 12)); // NOI18N
        btnExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/delete.png"))); // NOI18N
        btnExcluir.setText("Excluir");
        btnExcluir.setEnabled(false);
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });

        btnConsultar.setFont(new java.awt.Font("Calibri Light", 1, 12)); // NOI18N
        btnConsultar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/search.png"))); // NOI18N
        btnConsultar.setText("Consultar");
        btnConsultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConsultarActionPerformed(evt);
            }
        });

        btnCancelar.setFont(new java.awt.Font("Calibri Light", 1, 12)); // NOI18N
        btnCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/cancel.png"))); // NOI18N
        btnCancelar.setText("Cancelar");
        btnCancelar.setEnabled(false);
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        btnSair.setFont(new java.awt.Font("Calibri Light", 1, 12)); // NOI18N
        btnSair.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/evacuation.png"))); // NOI18N
        btnSair.setText("Fechar");
        btnSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSairActionPerformed(evt);
            }
        });

        btnSalvar.setFont(new java.awt.Font("Calibri Light", 1, 12)); // NOI18N
        btnSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/save.png"))); // NOI18N
        btnSalvar.setText("Salvar");
        btnSalvar.setEnabled(false);
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnSair)
                    .addComponent(btnNovo)
                    .addComponent(btnSalvar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnExcluir)
                    .addComponent(btnConsultar)
                    .addComponent(btnCancelar))
                .addContainerGap())
        );

        jPanel2Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnCancelar, btnConsultar, btnExcluir, btnNovo, btnSair, btnSalvar});

        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnNovo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnSalvar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnConsultar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnExcluir)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnCancelar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnSair)
                .addContainerGap())
        );

        jLabel2.setText("Status:");

        cbxStatus.setText("Ativo");

        jLabel3.setText("Nome:");

        jLabel5.setText("Sobrenome:");

        jLabel6.setText("CPF:");

        jLabel7.setText("RG:");

        txtRg.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtRgKeyReleased(evt);
            }
        });

        jLabel8.setText("Expedidor:");

        jLabel11.setText("Data Nasc.:");

        try {
            txtDataNasc.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        try {
            txtCPF.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        jLabel13.setText("Gênero:");

        cmbGenerco.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione o gênero" }));

        jLabel4.setText("Código:");

        txtCodigoFisica.setEnabled(false);

        javax.swing.GroupLayout pessoaFisicaLayout = new javax.swing.GroupLayout(pessoaFisica);
        pessoaFisica.setLayout(pessoaFisicaLayout);
        pessoaFisicaLayout.setHorizontalGroup(
            pessoaFisicaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pessoaFisicaLayout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(pessoaFisicaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pessoaFisicaLayout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbxStatus))
                    .addGroup(pessoaFisicaLayout.createSequentialGroup()
                        .addGroup(pessoaFisicaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(pessoaFisicaLayout.createSequentialGroup()
                                .addComponent(jLabel13)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cmbGenerco, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pessoaFisicaLayout.createSequentialGroup()
                                .addGroup(pessoaFisicaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(pessoaFisicaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtCPF, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtCodigoFisica, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(pessoaFisicaLayout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtRg, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(pessoaFisicaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(pessoaFisicaLayout.createSequentialGroup()
                                .addGroup(pessoaFisicaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(pessoaFisicaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtDataNasc, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtSobrenome, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(pessoaFisicaLayout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtOrgExpedidor, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );
        pessoaFisicaLayout.setVerticalGroup(
            pessoaFisicaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pessoaFisicaLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(pessoaFisicaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(cbxStatus)
                    .addComponent(jLabel4)
                    .addComponent(txtCodigoFisica, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pessoaFisicaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pessoaFisicaLayout.createSequentialGroup()
                        .addGroup(pessoaFisicaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtSobrenome, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(pessoaFisicaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtDataNasc, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11)))
                    .addGroup(pessoaFisicaLayout.createSequentialGroup()
                        .addGroup(pessoaFisicaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(pessoaFisicaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(txtCPF, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pessoaFisicaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pessoaFisicaLayout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(jLabel7))
                    .addComponent(txtRg, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pessoaFisicaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtOrgExpedidor, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel8)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pessoaFisicaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbGenerco, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13))
                .addContainerGap(13, Short.MAX_VALUE))
        );

        tabDados.addTab("Pessoa Física", pessoaFisica);

        jLabel23.setText("Status:");

        cbxStatusJur.setText("Ativo");

        jLabel24.setText("Razão Social:");

        jLabel25.setText("Fantasia:");

        jLabel26.setText("CNPJ:");

        jLabel31.setText("Ins. Estadual:");

        try {
            txtCnpj.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##.###.###/####-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        cbxIsento.setText("Isento de Inscrição");
        cbxIsento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxIsentoActionPerformed(evt);
            }
        });

        jLabel14.setText("Código:");

        txtCodigoJuridica.setEnabled(false);

        javax.swing.GroupLayout pessoaJuridicaLayout = new javax.swing.GroupLayout(pessoaJuridica);
        pessoaJuridica.setLayout(pessoaJuridicaLayout);
        pessoaJuridicaLayout.setHorizontalGroup(
            pessoaJuridicaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pessoaJuridicaLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(pessoaJuridicaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel14, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel24, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel26, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel31, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pessoaJuridicaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtCodigoJuridica, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtRazao)
                    .addComponent(txtCnpj)
                    .addComponent(txtIE, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(pessoaJuridicaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pessoaJuridicaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(pessoaJuridicaLayout.createSequentialGroup()
                            .addGap(26, 26, 26)
                            .addComponent(jLabel25)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txtFantasia, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(pessoaJuridicaLayout.createSequentialGroup()
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(cbxIsento)))
                    .addGroup(pessoaJuridicaLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel23)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbxStatusJur)))
                .addContainerGap(37, Short.MAX_VALUE))
        );
        pessoaJuridicaLayout.setVerticalGroup(
            pessoaJuridicaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pessoaJuridicaLayout.createSequentialGroup()
                .addGroup(pessoaJuridicaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pessoaJuridicaLayout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addGroup(pessoaJuridicaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel23)
                            .addComponent(cbxStatusJur)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pessoaJuridicaLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(pessoaJuridicaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel14)
                            .addComponent(txtCodigoJuridica, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pessoaJuridicaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel24)
                    .addComponent(txtRazao, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel25)
                    .addComponent(txtFantasia, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pessoaJuridicaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel26)
                    .addComponent(txtCnpj, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pessoaJuridicaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel31)
                    .addComponent(txtIE, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbxIsento))
                .addContainerGap(49, Short.MAX_VALUE))
        );

        tabDados.addTab("Pessoa Jurídica", pessoaJuridica);

        tblEndereco.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Logradouro", "Número", "Complemento", "Bairro", "Cidade", "UF"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblEndereco.setComponentPopupMenu(mnEndereco);
        jScrollPane1.setViewportView(tblEndereco);

        btnAddEndereco.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/address.png"))); // NOI18N
        btnAddEndereco.setText("Adicionar Endereço");
        btnAddEndereco.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddEnderecoActionPerformed(evt);
            }
        });

        panelContato.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Contato", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12))); // NOI18N

        jLabel12.setText("E-mail:");

        jLabel9.setText("Telefone:");

        try {
            txtTelefone.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("(##) ####-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        jLabel10.setText("Celular:");

        try {
            txtCelular.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("(##) #####-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        jLabel27.setText("Site:");

        javax.swing.GroupLayout panelContatoLayout = new javax.swing.GroupLayout(panelContato);
        panelContato.setLayout(panelContatoLayout);
        panelContatoLayout.setHorizontalGroup(
            panelContatoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelContatoLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panelContatoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelContatoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtEmail, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addGroup(panelContatoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(panelContatoLayout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCelular, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelContatoLayout.createSequentialGroup()
                        .addComponent(jLabel27)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtSite, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(36, 36, 36))
        );
        panelContatoLayout.setVerticalGroup(
            panelContatoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelContatoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelContatoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(txtCelular, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelContatoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelContatoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtSite, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel27))
                    .addGroup(panelContatoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel12)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tabDados)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnAddEndereco)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(panelContato, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(tabDados, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(panelContato, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnAddEndereco)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNovoActionPerformed
        this.botaoEnabled(false, false, false, true, true);
        this.tabDados.setEnabledAt(0, true);
        this.tabDados.setEnabledAt(1, true);
        this.enabledFields();
        this.txtCodigoJuridica.setEnabled(false);
        this.txtCodigoFisica.setEnabled(false);
        this.listGenero();
        this.action = "insert";
        this.address = new ArrayList<>();
        this.codigoExclusao = new ArrayList<>();
    }//GEN-LAST:event_btnNovoActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        this.botaoEnabled(true, true, false, false, false);
        this.clearFields();
        this.disabledFields();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSairActionPerformed
        this.setVisible(false);
        this.dispose();
    }//GEN-LAST:event_btnSairActionPerformed

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
        int type = this.tabDados.getSelectedIndex();
        boolean validaPessoa = (type == 0 ? this.validaPessoaFisica() : this.validaPessoaJuridica());
        boolean validaEnderecoContato = this.validaEnderecoContato();
        String msgSuccess = (this.action.equals("insert") ? "Cliente cadastro com sucesso!" : "Cliente atualizado com sucesso!");

        if (validaPessoa && validaEnderecoContato) {
            Cliente client = (type == 0 ? this.setPessoaFisica() : this.setPessoaJuridica());
            ClienteDao dao = new ClienteDao();
            dao.exeCliente(client);

            if (dao.getResult() > 1) {
                boolean resultContato = this.setContato(dao.getResult());
                boolean resultAddress = this.setEndereco(dao.getResult());
                boolean deleteAddress = this.excluirEndereco();
                
                if ((resultContato && resultAddress) && deleteAddress) {
                    this.clearFields();
                    this.disabledFields();
                    this.botaoEnabled(true, true, false, false, false);

                    JOptionPane.showMessageDialog(null, msgSuccess, "Informação", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(null, this.msg, "Error", JOptionPane.ERROR_MESSAGE);
                    this.msg = "";
                }
            } else {
                JOptionPane.showMessageDialog(null, "Ocorreu um erro ao cadastrar o Cliente:\n" + dao.getError(), "Error", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(null, this.msg, "Atenção", JOptionPane.WARNING_MESSAGE);
            this.msg = "";
        }
    }//GEN-LAST:event_btnSalvarActionPerformed

    private void cbxIsentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxIsentoActionPerformed
        if (this.cbxIsento.isSelected() == true) {
            this.txtIE.setText("Isento");
            this.txtIE.setEnabled(false);
        } else {
            this.txtIE.setText("");
            this.txtIE.setEnabled(true);
        }
    }//GEN-LAST:event_cbxIsentoActionPerformed

    private void txtRgKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtRgKeyReleased
        String value = txtRg.getText();
        String val = value.replaceAll("[^0-9]", "");
        txtRg.setText(val);
    }//GEN-LAST:event_txtRgKeyReleased

    private void btnConsultarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConsultarActionPerformed
        frmClienteConsulta clientConsult = new frmClienteConsulta();
        clientConsult.setVisible(true);
    }//GEN-LAST:event_btnConsultarActionPerformed

    private void btnAddEnderecoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddEnderecoActionPerformed
        frmEndereco endereco = new frmEndereco();
        endereco.setVisible(true);
    }//GEN-LAST:event_btnAddEnderecoActionPerformed

    private void mniEditarAddressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniEditarAddressActionPerformed
        int rowCount = this.tblEndereco.getSelectedRowCount();

        if (rowCount == 1) {
            this.rowId = this.tblEndereco.getSelectedRow();
            Endereco endereco = this.address.get(this.rowId);

            frmEndereco frmAddress = new frmEndereco();
            frmAddress.setVisible(true);
            frmAddress.editar(endereco);
        } else {
            JOptionPane.showMessageDialog(null, "Selecione um registro por vez, para edição!", "Alerta", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_mniEditarAddressActionPerformed

    private void mniRemoverAddressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniRemoverAddressActionPerformed
        if (this.tblEndereco.getSelectedRowCount() > 0) {
            if (JOptionPane.showConfirmDialog(null, "Deseja realmente excluir este Endereço?", "Confirmação", JOptionPane.YES_NO_OPTION) == 0) {
                this.rowId = this.tblEndereco.getSelectedRow();
                this.delAddress();
            }
        } else {
            JOptionPane.showMessageDialog(null, "Selecione um registro!", "Alerta", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_mniRemoverAddressActionPerformed

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed
         if (JOptionPane.showConfirmDialog(null, "Deseja realmente excluir este Cliente?", "Confirmação", JOptionPane.YES_NO_OPTION) == 0) {
            ClienteDao dao = new ClienteDao();
            dao.excluir(this.codigoCliente);
            
            if(dao.getResult() > 0){
                this.clearFields();
                this.disabledFields();
                this.botaoEnabled(true, true, false, false, false);
            }else{
                JOptionPane.showMessageDialog(null, dao.getError(), "Error", JOptionPane.ERROR_MESSAGE);
            }
         }
    }//GEN-LAST:event_btnExcluirActionPerformed

    private void botaoEnabled(boolean novo, boolean consultar, boolean excluir, boolean cancelar, boolean salvar) {
        this.btnSalvar.setEnabled(salvar);
        this.btnNovo.setEnabled(novo);
        this.btnConsultar.setEnabled(consultar);
        this.btnExcluir.setEnabled(excluir);
        this.btnCancelar.setEnabled(cancelar);
    }

    private void enabledFields() {
        this.tabDados.setEnabled(true);
        Auxiliar.enabledFields(this.pessoaFisica.getComponents());
        Auxiliar.enabledFields(this.pessoaJuridica.getComponents());
        Auxiliar.enabledFields(this.panelContato.getComponents());
        this.btnAddEndereco.setEnabled(true);
        this.tblEndereco.setEnabled(true);
    }

    private void disabledFields() {
        this.tabDados.setEnabled(false);
        Auxiliar.disabledFields(this.pessoaFisica.getComponents());
        Auxiliar.disabledFields(this.pessoaJuridica.getComponents());
        Auxiliar.disabledFields(this.panelContato.getComponents());
        this.btnAddEndereco.setEnabled(false);
        this.tblEndereco.setModel(new DefaultTableModel(new Object[0][0], this.tblEnderecoColumns));
        this.tblEndereco.setEnabled(false);
    }

    private void clearFields() {
        Auxiliar.clearFields(this.pessoaFisica.getComponents());
        Auxiliar.clearFields(this.pessoaJuridica.getComponents());
        Auxiliar.clearFields(this.panelContato.getComponents());
    }

    private void listGenero() {
        if (this.genero == null) {
            ClienteDao client = new ClienteDao();
            this.genero = client.getGenero();

            DefaultComboBoxModel defaultComboBox = new DefaultComboBoxModel(genero.toArray());
            this.cmbGenerco.setModel(defaultComboBox);
        }
    }

    private boolean validaPessoaFisica() {
        int error = 0;

        if (this.txtNome.getText() == null || this.txtNome.getText().trim().equals("")) {
            this.msg += "- O campo Nome é obrigátorio.\n";
            error++;
        }

        if (this.txtSobrenome.getText() == null || this.txtSobrenome.getText().trim().equals("")) {
            this.msg += "- O campo Sobrenome é obrigátorio.\n";
            error++;
        }

        if (this.txtCPF.getText() == null || this.txtCPF.getText().replaceAll("[^0-9]", "").equals("")) {
            this.msg += "- O campo CPF é obrigátorio.\n";
            error++;
        }
//        else if (!Auxiliar.isValideCPF(this.txtCPF.getText())) {
//            this.msg += "- CPF informado é inválido.\n";
//            error++;
//        }

        if (this.txtRg.getText() == null || this.txtRg.getText().trim().equals("")) {
            this.msg += "- O campo RG é obrigátorio.\n";
            error++;
        }

        if (this.txtRg.getText() == null || this.txtDataNasc.getText().replaceAll("[^0-9]", "").equals("")) {
            this.msg += "- O campo Data Nascimento é obrigátorio.\n";
            error++;
        } else if (!Auxiliar.isValideData(txtDataNasc.getText())) {
            this.msg += "- A Data de Nascimento informanda é inválida.\n";
            error++;
        }

        if (this.cmbGenerco.getSelectedIndex() == 0) {
            this.msg += "- O campo Gênero é obrigátorio.\n";
            error++;
        }

        return error <= 0;
    }

    private boolean validaPessoaJuridica() {
        int error = 0;

        if (this.txtRazao.getText() == null || this.txtRazao.getText().trim().equals("")) {
            this.msg += "- O campo Razão Social é obrigátorio.\n";
            error++;
        }
        if (this.txtFantasia.getText() == null || this.txtFantasia.getText().trim().equals("")) {
            this.msg += "- O campo Fantasia é obrigátorio.\n";
            error++;
        }
        if (this.txtCnpj.getText() == null || this.txtCnpj.getText().replaceAll("[^0-9]", "").equals("")) {
            this.msg += "- O campo CNPJ é obrigátorio.\n";
            error++;
        }
//        else if (!Auxiliar.isValideCNPJ(this.txtCnpj.getText())) {
//            this.msg += "- O CNPJ informado é inválido.\n";
//            error++;
//        }
        if (this.txtIE.getText() == null || this.txtIE.getText().trim().equals("")) {
            this.msg += "- O campo Inscrição Estadual é obrigátorio.\n";
            error++;
        }

        return error <= 0;
    }

    private boolean validaEnderecoContato() {
        int error = 0;
        int rowCountAddress = this.tblEndereco.getRowCount();

        if (this.txtTelefone.getText().replaceAll("[^0-9]", "").equals("")) {
            this.msg += "- O campo Telefone é obrigáotrio.\n";
            error++;
        }

        if (rowCountAddress == 0) {
            this.msg += "- Informe um Endereço.\n";
            error++;
        }

        return error <= 0;
    }

    private void getClienteContato(int codClient) {
        ContatoClienteDao ccd = new ContatoClienteDao();
        ContatoCliente contact = ccd.consultContatoPorId(codClient).get(0);

        this.codigoContato = contact.getCodigo();
        this.txtTelefone.setText(contact.getTelefone());
        this.txtCelular.setText(contact.getCelular());
        this.txtEmail.setText(contact.getEmail());
        this.txtSite.setText(contact.getSite());
    }

    private void getEndereco(int codClient) {
        EnderecoDao enderecoDao = new EnderecoDao();
        this.address = enderecoDao.consultEnderecoPorId(codClient);
        this.preencheTable();
    }

    private Cliente setPessoaFisica() {
        Cliente client = new Cliente();
        
        if(this.action.equals("update")){
            client.setCodigo(Integer.parseInt(this.txtCodigoFisica.getText()));
        }

        client.setNome(txtNome.getText());
        client.setSobrenome(txtSobrenome.getText());
        client.setCpfCnpj(txtCPF.getText());
        client.setRgIe(txtRg.getText());
        client.setDataNasc(Auxiliar.convertToSQl(txtDataNasc.getText()));
        client.setOrgExpedidor(txtOrgExpedidor.getText());
        client.setSexo(cmbGenerco.getSelectedIndex());
        client.setStatus(cbxStatus.isSelected());
        client.setTipo(1);
        client.setAction(this.action);

        return client;
    }

    private Cliente setPessoaJuridica() {
        Cliente client = new Cliente();
        
        if(this.action.equals("update")){
            client.setCodigo(Integer.parseInt(txtCodigoJuridica.getText()));
        }
        
        client.setNome(txtRazao.getText());
        client.setSobrenome(txtFantasia.getText());
        client.setCpfCnpj(txtCnpj.getText());
        client.setRgIe(txtIE.getText());
        client.setStatus(cbxStatusJur.isSelected());
        client.setSexo(2);
        client.setTipo(2);
        client.setAction(this.action);

        return client;
    }

    private boolean setContato(int codCliente) {
        ContatoCliente cc = new ContatoCliente();

        String celular = (this.txtCelular.getText().replaceAll("[^0-9]", "").equals("") ? "" : this.txtCelular.getText());
        cc.setCodCliente(codCliente);
        cc.setTelefone(this.txtTelefone.getText());
        cc.setCelular(celular);
        cc.setEmail(this.txtEmail.getText());
        cc.setSite(this.txtSite.getText());
        cc.setAction(this.action);
        cc.setCodigo(this.codigoContato);

        ContatoClienteDao ccDao = new ContatoClienteDao();
        ccDao.exeContato(cc);

        if (ccDao.getError() != null) {
            this.msg += ccDao.getError() + "\n";
            return false;
        }

        return true;
    }

    private boolean setEndereco(int codCliente) {
        for (Endereco addr : this.address) {
            addr.setCodCliente(codCliente);
            EnderecoDao enderecoDao = new EnderecoDao();
            enderecoDao.exeEndereco(addr);

            if (enderecoDao.getError() != null) {
                this.msg += enderecoDao.getError() + "\n";
                return false;
            }
        }

        return true;
    }

    private boolean excluirEndereco() {
        if (this.codigoExclusao != null && this.codigoExclusao.size() > 0) {
            for (int id : this.codigoExclusao) {
                EnderecoDao enderecoDao = new EnderecoDao();
                enderecoDao.excluir(id);
                
                if (enderecoDao.getError() != null) {
                    this.msg += enderecoDao.getError() + "\n";
                    return false;
                }
            }
        }
        
        return true;
    }
    
    private void setWidthColumn(){   
        this.tblEndereco.getColumnModel().getColumn(0).setPreferredWidth(100);
        this.tblEndereco.getColumnModel().getColumn(1).setPreferredWidth(20);
        this.tblEndereco.getColumnModel().getColumn(2).setPreferredWidth(50);
        this.tblEndereco.getColumnModel().getColumn(3).setPreferredWidth(80);
        this.tblEndereco.getColumnModel().getColumn(4).setPreferredWidth(80);
        this.tblEndereco.getColumnModel().getColumn(5).setPreferredWidth(10);
    }
    
    private void preencheTable(){
        DefaultTableModel model = (DefaultTableModel) this.tblEndereco.getModel();
        model.setNumRows(0);
        
        for (Endereco add : this.address) {
            Object[] obj = {add.getLogradouro(), add.getNumero(), add.getComplemento(), add.getBairro(), add.getCidade(), add.getEstado()};
            model.addRow(obj);
        }
        
        this.tblEndereco.setModel(model);
        this.setWidthColumn();    
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddEndereco;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnConsultar;
    private javax.swing.JButton btnExcluir;
    private javax.swing.JButton btnNovo;
    private javax.swing.JButton btnSair;
    private javax.swing.JButton btnSalvar;
    private javax.swing.JCheckBox cbxIsento;
    private javax.swing.JCheckBox cbxStatus;
    private javax.swing.JCheckBox cbxStatusJur;
    private javax.swing.JComboBox<String> cmbGenerco;
    private javax.swing.ButtonGroup grTipo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPopupMenu mnEndereco;
    private javax.swing.JMenuItem mniEditarAddress;
    private javax.swing.JMenuItem mniRemoverAddress;
    private javax.swing.JPanel panelContato;
    private javax.swing.JPanel pessoaFisica;
    private javax.swing.JPanel pessoaJuridica;
    private javax.swing.JTabbedPane tabDados;
    private javax.swing.JTable tblEndereco;
    private javax.swing.JFormattedTextField txtCPF;
    private javax.swing.JFormattedTextField txtCelular;
    private javax.swing.JFormattedTextField txtCnpj;
    private javax.swing.JTextField txtCodigoFisica;
    private javax.swing.JTextField txtCodigoJuridica;
    private javax.swing.JFormattedTextField txtDataNasc;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtFantasia;
    private javax.swing.JTextField txtIE;
    private javax.swing.JTextField txtNome;
    private javax.swing.JTextField txtOrgExpedidor;
    private javax.swing.JTextField txtRazao;
    private javax.swing.JTextField txtRg;
    private javax.swing.JTextField txtSite;
    private javax.swing.JTextField txtSobrenome;
    private javax.swing.JFormattedTextField txtTelefone;
    // End of variables declaration//GEN-END:variables
}
